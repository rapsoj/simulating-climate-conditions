setwd("..//")
library(dplyr)
setwd("~/Documents/GitHub/simulating-climate-conditions/mitigants")
setwd("..//")
library(dplyr)
ghg_df <- read.csv('data/total-ghg-emissions.csv') %>%
# Rename columns
rename('co2eq' = Annual.greenhouse.gas.emissions.in.CO..equivalents) %>%
# Convert from tonnes to kilograms
mutate(co2eq = co2eq * 1000) %>%
rename('Country' = Entity) %>%
# Filter to most recent year
filter(Year == max(Year)) %>%
# Filter to country-level
filter(Code != '')
Numcars <- read.csv('data/Number of Cars Per Country.csv')
EU_dieselandpetrol <- read.csv('data/road_eqs_carpda_page_spreadsheet.csv') %>%
dplyr::rename('petroleum' = Petroleum.products) %>%
dplyr::rename('cars' = Total) %>%
dplyr::rename('diesel' = Diesel) %>%
dplyr::rename('Country' = GEO..Labels.) %>%
oil_Eff <- read.csv('data/Improving Oil Efficency - Average Fuel Consumption.csv') %>%
dplyr::rename('Country' = X ) %>%
dplyr::rename('km_per_letre' = X.2)
distancetravelled <- read.csv('data/average_distance_by_car.csv')
country_var <- ghg_df$Code
km_increase_in_efficiency <- c(0:20)
total_increase_in_efficiency <- merge(
ghg_df, Numcars[c('Country', 'Total_Car')], by='Country', all.x = T) %>%
merge(oil_Eff[,c('Country', 'km_per_letre')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'petroleum')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'diesel')], by='Country', all.x = T)
EU_dieselandpetrol <- read.csv('data/road_eqs_carpda_page_spreadsheet.csv') %>%
dplyr::rename('Country' = GEO..Labels.) %>%
oil_Eff <- read.csv('data/Improving Oil Efficency - Average Fuel Consumption.csv') %>%
dplyr::rename('Country' = X ) %>%
dplyr::rename('km_per_letre' = X.2)
EU_dieselandpetrol <- read.csv('data/road_eqs_carpda_page_spreadsheet.csv') %>%
dplyr::rename('Country' = GEO..Labels.)
View(EU_dieselandpetrol)
EU_dieselandpetrol <- read.csv('data/road_eqs_carpda_page_spreadsheet.csv') %>%
dplyr::rename('Country' = GEO..Labels.) %>%
dplyr::rename('percent_Petroleum' = X..Petroleum) %>%
dplyr::rename('percent_Diesel' = X..Diesel)
total_increase_in_efficiency <- merge(
ghg_df, Numcars[c('Country', 'Total_Car')], by='Country', all.x = T) %>%
merge(oil_Eff[,c('Country', 'km_per_letre')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'percent_Petroleum')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'percent_Diesel')], by='Country', all.x = T)
oil_Eff <- read.csv('data/Improving Oil Efficency - Average Fuel Consumption.csv') %>%
dplyr::rename('Country' = X ) %>%
dplyr::rename('km_per_letre' = X.2)
distancetravelled <- read.csv('data/average_distance_by_car.csv')
country_var <- ghg_df$Code
km_increase_in_efficiency <- c(0:20)
total_increase_in_efficiency <- merge(
ghg_df, Numcars[c('Country', 'Total_Car')], by='Country', all.x = T) %>%
merge(oil_Eff[,c('Country', 'km_per_letre')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'percent_Petroleum')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'percent_Diesel')], by='Country', all.x = T)
EU_dieselandpetrol <- read.csv('data/road_eqs_carpda_page_spreadsheet.csv') %>%
dplyr::rename('Country' = GEO..Labels.) %>%
dplyr::rename('percent_Petroleum' = X..Petroleum) %>%
dplyr::rename('percent_Diesel' = X..Diesel)
oil_Eff <- read.csv('data/Improving Oil Efficency - Average Fuel Consumption.csv') %>%
dplyr::rename('Country' = X ) %>%
dplyr::rename('km_per_letre' = X.2)
distancetravelled <- read.csv('data/average_distance_by_car.csv')
country_var <- ghg_df$Code
km_increase_in_efficiency <- c(0:20)
total_increase_in_efficiency <- merge(
ghg_df, Numcars[c('Country', 'Total_Car')], by='Country', all.x = T) %>%
merge(oil_Eff[,c('Country', 'km_per_letre')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'percent_Petroleum')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'percent_Diesel')], by='Country', all.x = T)
#### PREPARE WORKSPACE ####
# Move working directory to main folder
setwd("../")
# Import utils
source("data/utils/geography.R")
country_vars <- ghg_df$Code
total_increase_in_efficiency <- merge(
ghg_df, Numcars[c('Country', 'Total_Car')], by='Country', all.x = T) %>%
merge(oil_Eff[,c('Country', 'km_per_letre')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'percent_Petroleum')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'percent_Diesel')], by='Country', all.x = T) %>%
group_by(Code)
ghg_df <- read.csv('data/total-ghg-emissions.csv') %>%
# Rename columns
rename('co2eq' = Annual.greenhouse.gas.emissions.in.CO..equivalents) %>%
# Convert from tonnes to kilograms
mutate(co2eq = co2eq * 1000) %>%
rename('Country' = Entity) %>%
# Filter to most recent year
filter(Year == max(Year)) %>%
# Filter to country-level
filter(Code != '') %>%
merge(stack(regions), by.x = "Code", by.y = "values", all.x = T) %>%
# Rename columns
dplyr::rename('region' = ind) %>%
# Link continents
merge(stack(continents), by.x = "region", by.y = "values", all.x = T) %>%
# Rename columns
dplyr::rename('continent' = ind)
ghg_df <- read.csv('data/total-ghg-emissions.csv') %>%
# Rename columns
rename('co2eq' = Annual.greenhouse.gas.emissions.in.CO..equivalents) %>%
# Convert from tonnes to kilograms
mutate(co2eq = co2eq * 1000) %>%
rename('Country' = Entity) %>%
# Filter to most recent year
filter(Year == max(Year)) %>%
# Filter to country-level
filter(Code != '') %>%
merge(stack(regions), by.x = "Code", by.y = "values", all.x = T) %>%
# Rename columns
dplyr::rename('region' = ind) %>%
# Link continents
merge(stack(continents), by.x = "region", by.y = "values", all.x = T) %>%
# Rename columns
dplyr::rename('continent' = ind)
setwd("~/Documents/GitHub/simulating-climate-conditions/mitigants")
setwd("..//")
library(dplyr)
ghg_df <- read.csv('data/total-ghg-emissions.csv') %>%
# Rename columns
rename('co2eq' = Annual.greenhouse.gas.emissions.in.CO..equivalents) %>%
# Convert from tonnes to kilograms
mutate(co2eq = co2eq * 1000) %>%
rename('Country' = Entity) %>%
# Filter to most recent year
filter(Year == max(Year)) %>%
# Filter to country-level
filter(Code != '') %>%
merge(stack(regions), by.x = "Code", by.y = "values", all.x = T) %>%
# Rename columns
dplyr::rename('region' = ind) %>%
# Link continents
merge(stack(continents), by.x = "region", by.y = "values", all.x = T) %>%
# Rename columns
dplyr::rename('continent' = ind)
setwd("..//")
library(dplyr)
ghg_df <- read.csv('data/total-ghg-emissions.csv') %>%
# Rename columns
rename('co2eq' = Annual.greenhouse.gas.emissions.in.CO..equivalents) %>%
# Convert from tonnes to kilograms
mutate(co2eq = co2eq * 1000) %>%
rename('Country' = Entity) %>%
# Filter to most recent year
filter(Year == max(Year)) %>%
# Filter to country-level
filter(Code != '') %>%
merge(stack(regions), by.x = "Code", by.y = "values", all.x = T) %>%
# Rename columns
dplyr::rename('region' = ind) %>%
# Link continents
merge(stack(continents), by.x = "region", by.y = "values", all.x = T) %>%
# Rename columns
dplyr::rename('continent' = ind)
source("data/utils/geography.R")
setwd("~/Documents/GitHub/simulating-climate-conditions/mitigants")
setwd("..//")
library(dplyr)
source("data/utils/geography.R")
ghg_df <- read.csv('data/total-ghg-emissions.csv') %>%
# Rename columns
rename('co2eq' = Annual.greenhouse.gas.emissions.in.CO..equivalents) %>%
# Convert from tonnes to kilograms
mutate(co2eq = co2eq * 1000) %>%
rename('Country' = Entity) %>%
# Filter to most recent year
filter(Year == max(Year)) %>%
# Filter to country-level
filter(Code != '') %>%
merge(stack(regions), by.x = "Code", by.y = "values", all.x = T) %>%
# Rename columns
dplyr::rename('region' = ind) %>%
# Link continents
merge(stack(continents), by.x = "region", by.y = "values", all.x = T) %>%
# Rename columns
dplyr::rename('continent' = ind)
Numcars <- read.csv('data/Number of Cars Per Country.csv')
EU_dieselandpetrol <- read.csv('data/road_eqs_carpda_page_spreadsheet.csv') %>%
dplyr::rename('Country' = GEO..Labels.) %>%
dplyr::rename('percent_Petroleum' = X..Petroleum) %>%
dplyr::rename('percent_Diesel' = X..Diesel)
oil_Eff <- read.csv('data/Improving Oil Efficency - Average Fuel Consumption.csv') %>%
dplyr::rename('Country' = X ) %>%
dplyr::rename('km_per_letre' = X.2)
distancetravelled <- read.csv('data/average_distance_by_car.csv')
country_var <- ghg_df$Code
km_increase_in_efficiency <- c(0:20)
total_increase_in_efficiency <- merge(
ghg_df, Numcars[c('Country', 'Total_Car')], by='Country', all.x = T) %>%
merge(oil_Eff[,c('Country', 'km_per_letre')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'percent_Petroleum')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'percent_Diesel')], by='Country', all.x = T) %>%
group_by(Code)
total_increase_in_efficiency <- merge(
ghg_df, Numcars[c('Country', 'Total_Car')], by='Country', all.x = T) %>%
merge(oil_Eff[,c('Country', 'km_per_letre')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'percent_Petroleum')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'percent_Diesel')], by='Country', all.x = T) %>%
group_by(region) %>%
s
setwd("~/Documents/GitHub/simulating-climate-conditions/mitigants")
# Move working directory to main folder
setwd("../")
# Import utils
source("data/utils/geography.R")
# Load libraries
library(dplyr)
# Load global CO2 equivalent emissions data
ghg_df <- read.csv('data/total-ghg-emissions.csv') %>%
# Rename columns
dplyr::rename('co2eq' = Annual.greenhouse.gas.emissions.in.CO..equivalents) %>%
# Convert from tonnes to kilograms
mutate(co2eq = co2eq * 1000) %>%
# Filter to most recent year
filter(Year == max(Year)) %>%
# Filter to country-level
filter(Code != '') %>%
# Link regions
merge(stack(regions), by.x = "Code", by.y = "values", all.x = T) %>%
# Rename columns
dplyr::rename('region' = ind) %>%
# Link continents
merge(stack(continents), by.x = "region", by.y = "values", all.x = T) %>%
# Rename columns
dplyr::rename('continent' = ind)
# Load population data
pop_df <- read.csv('data/population.csv') %>%
# Rename columns
dplyr::rename('pop' = Population..historical.estimates.) %>%
# Filter to most recent year
filter(Year == max(Year)) %>%
# Filter to country-level
filter(Code != '') %>%
# Filter to regions that have GHG emissions data
filter(Code %in% ghg_df$Code) %>%
# Link regions
merge(stack(regions), by.x = "Code", by.y = "values", all.x = T) %>%
# Rename columns
dplyr::rename('region' = ind) %>%
# Link continents
merge(stack(continents), by.x = "region", by.y = "values", all.x = T) %>%
# Rename columns
dplyr::rename('continent' = ind)
# Load data on annual per capita domestic flight emissions
per_cap_flight_dom_df <- read.csv(
'data/per-capita-co2-domestic-aviation.csv') %>%
# Rename columns
dplyr::rename('per_cap_co2adj_dom' = Per.capita.domestic.aviation.CO2)
# Load data on annual per capita international flight emissions
per_cap_flight_int_df <- read.csv(
'data/per-capita-co2-international-flights-adjusted.csv') %>%
# Rename columns
dplyr::rename('per_cap_co2adj_int' = Per.capita.international.CO2...adjusted)
# Define valid variables
flight_vars <- c('dom', 'int')
country_vars <- ghg_df$Code
percent_reduction_vars <- c(0:100)
# Write printable versions of variable names
country_print <- setNames(as.list(ghg_df$Entity), ghg_df$Code)
flight_print <- list('dom' = 'domestic',
'int' = 'international')
# Calculate total emissions from flights
total_flight_emissions <- merge(
# Merge population and per capita domestic flight emission dataframes
pop_df, per_cap_flight_dom_df[,c('Code', 'per_cap_co2adj_dom')],
by='Code', all.x=T) %>%
# Merge per capita domestic flight emission dataframe
merge(per_cap_flight_int_df[,c('Code', 'per_cap_co2adj_int')],
by='Code', all.x=T) %>%
# Group by region
group_by(region) %>%
# Impute missing per capita values using regional averages
mutate(
# Add imputation flags
impute_flag_dom = ifelse(is.na(per_cap_co2adj_dom), "*", ""),
impute_flag_int = ifelse(is.na(per_cap_co2adj_int), "*", ""),
# Impute per capita values using regional averages
per_cap_co2adj_dom = if_else(
impute_flag_dom == "*", median(per_cap_co2adj_dom, na.rm = T), per_cap_co2adj_dom),
per_cap_co2adj_int = if_else(
impute_flag_int == "*", median(per_cap_co2adj_int, na.rm = T), per_cap_co2adj_int)
) %>%
# Ungroup data
ungroup() %>%
# Group by continent
group_by(continent) %>%
# Impute remaining missing per capita values using continent averages
mutate(
# Add imputation flags
impute_flag_dom = ifelse(is.na(per_cap_co2adj_dom), "**", impute_flag_dom),
impute_flag_int = ifelse(is.na(per_cap_co2adj_int), "**", impute_flag_int),
# Impute per capita values using regional averages
per_cap_co2adj_dom = if_else(
impute_flag_dom == "**", median(per_cap_co2adj_dom, na.rm = T), per_cap_co2adj_dom),
per_cap_co2adj_int = if_else(
impute_flag_int == "**", median(per_cap_co2adj_int, na.rm = T), per_cap_co2adj_int)
) %>%
# Add columns with total flight emissions
mutate(
# Calculate total domestic flight emissions
total_dom_co2eq = pop * per_cap_co2adj_dom,
# Calculate total international flight emissions
total_int_co2eq = pop * per_cap_co2adj_int,
)
# Write function to calculate impact of mitigant
reduce_flights <- function(flight, country, percent_reduction){
# Apply reduction to total flight emission data
old_emissions <- total_flight_emissions[
total_flight_emissions$Code %in% country, paste0('total_', flight, '_co2eq')]
new_emissions <- total_flight_emissions[
total_flight_emissions$Code %in% country, paste0('total_', flight, '_co2eq')] *
(100 - percent_reduction) / 100
impact <- old_emissions - new_emissions
impact_million_tonnes <- impact / 100000000
# Compare to current emissions
country_emissions <- ghg_df[ghg_df$Code %in% country, 'co2eq']
global_emissions <- ghg_df[ghg_df$Code == 'OWID_WRL', 'co2eq']
percent_impact_country <- impact / country_emissions * 100
percent_impact_global <- impact / global_emissions * 100
# Print result
print(paste0(
'The impact of reducing ', country_print[country], ' ', flight_print[flight],
' flights by ', percent_reduction, '% is a reduction of ',
round(impact_million_tonnes, 2), ' million tonnes CO2 equivalent or ',
round(percent_impact_country, 2), '% of total ', country_print[country],
' emissions.'))
print(paste0(
'This is ', round(percent_impact_global, 2), '% of global emissions.'))
}
View(total_flight_emissions)
total_increase_in_efficiency <- merge(
ghg_df, Numcars[c('Country', 'Total_Car')], by='Country', all.x = T) %>%
merge(oil_Eff[,c('Country', 'km_per_letre')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'percent_Petroleum')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'percent_Diesel')], by='Country', all.x = T) %>%
group_by(region) %>%
mutate(
impute_flag_kmperletre = ifelse(is.na(km_per_letre), "**", impute_flag_kmperletre) %>%
km_per_letre = if_else(
total_increase_in_efficiency <- merge(
ghg_df, Numcars[c('Country', 'Total_Car')], by='Country', all.x = T) %>%
merge(oil_Eff[,c('Country', 'km_per_letre')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'percent_Petroleum')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'percent_Diesel')], by='Country', all.x = T) %>%
group_by(region) %>%
mutate(
impute_flag_kmperletre = ifelse(is.na(km_per_letre), "**", impute_flag_kmperletre)
km_per_letre = if_else(
total_increase_in_efficiency <- merge(
ghg_df, Numcars[c('Country', 'Total_Car')], by='Country', all.x = T) %>%
merge(oil_Eff[,c('Country', 'km_per_letre')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'percent_Petroleum')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'percent_Diesel')], by='Country', all.x = T) %>%
group_by(region) %>%
mutate(
impute_flag_kmperletre = ifelse(is.na(km_per_letre), '**', impute_flag_kmperletre)
km_per_letre = if_else(
total_increase_in_efficiency <- merge(
ghg_df, Numcars[c('Country', 'Total_Car')], by='Country', all.x = T) %>%
merge(oil_Eff[,c('Country', 'km_per_letre')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'percent_Petroleum')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'percent_Diesel')], by='Country', all.x = T) %>%
group_by(region) %>%
mutate(
impute_flag_kmperletre = ifelse(is.na('km_per_letre'), '**', impute_flag_kmperletre)
km_per_letre = if_else(
total_increase_in_efficiency <- merge(
ghg_df, Numcars[c('Country', 'Total_Car')], by='Country', all.x = T) %>%
merge(oil_Eff[,c('Country', 'km_per_letre')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'percent_Petroleum')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'percent_Diesel')], by='Country', all.x = T) %>%
group_by(region) %>%
mutate(
impute_flag_kmperletre = ifelse(is.na('km_per_letre'), "*", ""),
km_per_letre = if_else(
impute_flag_kmperletre == '*', mean(km_per_letre, na.rm = T), km_per_letre)
)
total_increase_in_efficiency <- merge(
ghg_df, Numcars[c('Country', 'Total_Car')], by='Country', all.x = T) %>%
merge(oil_Eff[,c('Country', 'km_per_letre')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'percent_Petroleum')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'percent_Diesel')], by='Country', all.x = T) %>%
group_by(region) %>%
mutate(
impute_flag_kmperletre = ifelse(is.na('km_per_letre'), "*", ""),
km_per_letre = if_else(impute_flag_kmperletre == '*', mean(km_per_letre, na.rm = T), km_per_letre)
)
total_increase_in_efficiency <- merge(
ghg_df, Numcars[c('Country', 'Total_Car')], by='Country', all.x = T) %>%
merge(oil_Eff[,c('Country', 'km_per_letre')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'percent_Petroleum')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'percent_Diesel')], by='Country', all.x = T) %>%
group_by(region) %>%
mutate(
impute_flag_kmperletre = ifelse(is.na('km_per_letre'), "*", ""),
km_per_letre = if_else(impute_flag_kmperletre == '*', mean(km_per_letre, na.rm = T), km_per_letre)
)
total_increase_in_efficiency <- merge(
ghg_df, Numcars[c('Country', 'Total_Car')], by='Country', all.x = T) %>%
merge(oil_Eff[,c('Country', 'km_per_letre')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'percent_Petroleum')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'percent_Diesel')], by='Country', all.x = T) %>%
group_by(region) %>%
mutate(
impute_flag_kmperletre = ifelse(is.na(km_per_letre), "*", ""),
km_per_letre = if_else(impute_flag_kmperletre == '*', mean(km_per_letre, na.rm = T), km_per_letre)
)
impute_flag_kmperletre = ifelse(is.na(km_per_letre), "*", ""),
impute_flag_kmperletre = ifelse(is.na(km_per_letre), '*', ''),
total_increase_in_efficiency <- merge(
ghg_df, Numcars[c('Country', 'Total_Car')], by='Country', all.x = T) %>%
merge(oil_Eff[,c('Country', 'km_per_letre')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'percent_Petroleum')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'percent_Diesel')], by='Country', all.x = T) %>%
group_by(region) %>%
mutate(
impute_flag_kmperletre = ifelse(is.na(km_per_letre), "*", ''),
)
total_increase_in_efficiency <- merge(
ghg_df, Numcars[c('Country', 'Total_Car')], by='Country', all.x = T) %>%
merge(oil_Eff[,c('Country', 'km_per_letre')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'percent_Petroleum')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'percent_Diesel')], by='Country', all.x = T) %>%
group_by(region) %>%
mutate(
impute_flag_kmperletre = ifelse(is.na(km_per_letre), "*", ''),
)
# Calculate total emissions from flights
total_flight_emissions <- merge(
# Merge population and per capita domestic flight emission dataframes
pop_df, per_cap_flight_dom_df[,c('Code', 'per_cap_co2adj_dom')],
by='Code', all.x=T) %>%
# Merge per capita domestic flight emission dataframe
merge(per_cap_flight_int_df[,c('Code', 'per_cap_co2adj_int')],
by='Code', all.x=T) %>%
# Group by region
group_by(region) %>%
# Impute missing per capita values using regional averages
mutate(
# Add imputation flags
impute_flag_dom = ifelse(is.na(per_cap_co2adj_dom), "*", ""),
impute_flag_int = ifelse(is.na(per_cap_co2adj_int), "*", ""),
# Impute per capita values using regional averages
per_cap_co2adj_dom = if_else(
impute_flag_dom == "*", median(per_cap_co2adj_dom, na.rm = T), per_cap_co2adj_dom),
per_cap_co2adj_int = if_else(
impute_flag_int == "*", median(per_cap_co2adj_int, na.rm = T), per_cap_co2adj_int)
) %>%
# Ungroup data
ungroup() %>%
# Group by continent
group_by(continent) %>%
# Impute remaining missing per capita values using continent averages
mutate(
# Add imputation flags
impute_flag_dom = ifelse(is.na(per_cap_co2adj_dom), "**", impute_flag_dom),
impute_flag_int = ifelse(is.na(per_cap_co2adj_int), "**", impute_flag_int),
# Impute per capita values using regional averages
per_cap_co2adj_dom = if_else(
impute_flag_dom == "**", median(per_cap_co2adj_dom, na.rm = T), per_cap_co2adj_dom),
per_cap_co2adj_int = if_else(
impute_flag_int == "**", median(per_cap_co2adj_int, na.rm = T), per_cap_co2adj_int)
) %>%
# Add columns with total flight emissions
mutate(
# Calculate total domestic flight emissions
total_dom_co2eq = pop * per_cap_co2adj_dom,
# Calculate total international flight emissions
total_int_co2eq = pop * per_cap_co2adj_int,
)
View(total_flight_emissions)
total_increase_in_efficiency <- merge(
ghg_df, Numcars[c('Country', 'Total_Car')], by='Country', all.x = T) %>%
merge(oil_Eff[,c('Country', 'km_per_letre')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'percent_Petroleum')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'percent_Diesel')], by='Country', all.x = T) %>%
group_by(region) %>%
mutate(
impute_flag_kmperletre = ifelse(is.na(km_per_letre), "*", ''),
km_per_letre = if_else(
impute_flag_kmperletre == "*", mean(km_per_letre, na.rm = T), km_per_letre)
)
View(distancetravelled)
distancetravelled <- read.csv('data/average_distance_by_car.csv') %>%
dplyr::rename('km_by_car' = km.travelled.by.car.per.annum)
total_increase_in_efficiency <- merge(
ghg_df, Numcars[c('Country', 'Total_Car')], by='Country', all.x = T) %>%
merge(oil_Eff[,c('Country', 'km_per_letre')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'percent_Petroleum')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'percent_Diesel')], by='Country', all.x = T) %>%
mutate(
)
total_increase_in_efficiency <- merge(
ghg_df, Numcars[c('Country', 'Total_Car')], by='Country', all.x = T) %>%
merge(oil_Eff[,c('Country', 'km_per_letre')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'percent_Petroleum')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'percent_Diesel')], by='Country', all.x = T) %>%
merge(distancetravelled[,c('Country', 'km_by_car')], by='Country', all.x = T) %>%
mutate(
)
total_increase_in_efficiency <- merge(
ghg_df, Numcars[c('Country', 'Total_Car')], by='Country', all.x = T) %>%
merge(oil_Eff[,c('Country', 'km_per_letre')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'percent_Petroleum')], by='Country', all.x = T) %>%
merge(EU_dieselandpetrol[,c('Country', 'percent_Diesel')], by='Country', all.x = T) %>%
merge(distancetravelled[,c('Country', 'km_by_car')], by='Country', all.x = T) %>%
